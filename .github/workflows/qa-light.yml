name: QA Light

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened, ready_for_review]
  schedule:
    - cron: '0 4 * * 1'
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  qa:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: wordpress_tests
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug
          tools: composer:v2

      - name: Install dependencies
        uses: ramsey/composer-install@v3
        with:
          composer-options: --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup WP tests (idempotent)
        run: composer setup:wp-tests || true

      - name: Baseline (FOUNDATION)
        run: php baseline-check --current-phase=FOUNDATION

      - name: Security & Compliance Scans (light)
        run: |
          set -euo pipefail
          php scripts/scan-rest-permissions.php      > rest-violations.json      || true
          php scripts/scan-sql-prepare.php           > sql-violations.json       || true
          php scripts/scan-secrets.php               > secrets.json              || true
          if [ -f scripts/headers-guard.php ]; then php scripts/headers-guard.php --q || true; fi
          if [ -f scripts/i18n-lint.php ]; then php scripts/i18n-lint.php > i18n-lint.json || true; fi

      - name: Unit tests (coverage)
        env:
          XDEBUG_MODE: coverage
        run: |
          vendor/bin/phpunit --colors=always --log-junit build/junit.unit.xml --coverage-clover build/coverage.unit.xml -c phpunit-unit.xml || true
          php scripts/coverage-threshold.php --file=build/coverage.unit.xml --min=65

      - name: Static analysis (non-blocking)
        run: |
          mkdir -p out
          vendor/bin/phpstan analyze --level=5 --no-progress --error-format=json src includes > out/phpstan.json || true
          vendor/bin/psalm --no-progress --output-format=json > out/psalm.json || true
          php scripts/quality-summary.php --phpstan=out/phpstan.json --psalm=out/psalm.json

      - name: QA Summary (Markdown)
        run: php scripts/qa-summary-md.php || true

      - name: QA Orchestrator (index + bundle)
        run: |
          bash scripts/qa-orchestrator.sh || true

      - name: Upload QA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qa-artifacts
          path: |
            artifacts/**
            rest-violations.json
            sql-violations.json
            secrets.json
            i18n-lint.json
            build/coverage.unit.xml
            build/junit.unit.xml
            out/phpstan.json
            out/psalm.json
          if-no-files-found: warn

  semgrep:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    if: github.event_name == 'pull_request' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Semgrep (local + packs)
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            semgrep-rules
            p/php
            p/wordpress
        continue-on-error: true

      - name: Upload Semgrep SARIF
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: semgrep.sarif
          if-no-files-found: warn
      - name: Upload to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  e2e:
    name: E2E (conditional)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect UI/editor changes
        id: changes
        shell: bash
        run: |
          set -euo pipefail
          BASE="${{ github.event.pull_request.base.sha }}"
          HEAD="${{ github.event.pull_request.head.sha }}"
          CHANGED=$(git diff --name-only "$BASE..$HEAD" || true)
          echo "Changed files:\n$CHANGED"
          if echo "$CHANGED" | grep -Eq '^(src/Admin/|includes/Admin/|templates/|assets/|e2e/|tests/e2e/|.*\.(css|scss|js|ts|tsx)$)'; then
            echo "run=true" >> "$GITHUB_OUTPUT"
          elif echo "${{ join(github.event.pull_request.labels.*.name, ',') }}" | grep -qi 'ui-change'; then
            echo "run=true" >> "$GITHUB_OUTPUT"
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node
        if: steps.changes.outputs.run == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright deps
        if: steps.changes.outputs.run == 'true'
        run: |
          npx --yes playwright install --with-deps

      - name: Start WordPress (Docker)
        if: steps.changes.outputs.run == 'true'
        run: |
          docker compose up -d --build db wordpress
          # wait for health
          for i in $(seq 1 30); do
            if docker inspect --format='{{json .State.Health.Status}}' $(docker compose ps -q wordpress) | grep -q healthy; then
              break; fi; sleep 5; done
          docker compose ps

      - name: Install WordPress (wp-cli.phar)
        if: steps.changes.outputs.run == 'true'
        run: |
          docker compose exec -T wordpress bash -lc '
            set -euo pipefail
            cd /var/www/html
            php -r "copy(\"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\", \"wp-cli.phar\");"
            php wp-cli.phar core is-installed || php wp-cli.phar core install \
              --url="http://localhost" --title="Test Site" \
              --admin_user=admin --admin_password=admin --admin_email=test@example.com --skip-email
          '

      - name: Run Playwright E2E
        if: steps.changes.outputs.run == 'true'
        env:
          WP_BASE_URL: http://localhost:8080
          E2E: '1'
        run: |
          npx playwright test e2e/tests/editor-smoke.spec.ts || true
          npx playwright test tests/e2e/smoke.spec.ts || true

      - name: Upload E2E Report
        if: steps.changes.outputs.run == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: playwright-report
          if-no-files-found: warn
