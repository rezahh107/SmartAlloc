name: Session Continuation
on:
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  snapshot:
    if: >
      contains(github.event.comment.body, 'پروتکل تداوم نشست را اجرا کن') ||
      contains(github.event.comment.body, '/snapshot')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.issue.pull_request.head.ref || github.ref_name }}

      - name: 🧮 Generate/refresh project state
        run: make state

      - name: 📦 Commit & Push (if changed)
        env:
          BRANCH_NAME: ${{ github.event.issue.pull_request.head.ref || github.ref_name }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          for f in FEATURES.md PROJECT_STATE.md ai_context.json; do
            [ -f "$f" ] && git add "$f"
          done
          branch="$BRANCH_NAME"
          current_branch="$(git rev-parse --abbrev-ref HEAD)"
          if [ "$current_branch" != "$branch" ]; then
            echo "Aborting: checked out $current_branch but expected $branch"
            exit 1
          fi
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: auto-update project snapshot"
            git push origin "HEAD:$branch"
          fi

      - name: 🧾 Post snapshot as comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let body = '### 🎯 SNAPSHOT وضعیت پروژه\n';
            if (fs.existsSync('PROJECT_STATE.md')) {
              const content = fs.readFileSync('PROJECT_STATE.md', 'utf8');
              body += content.substring(0, 6000);
              if (content.length > 6000) body += '\n... (truncated)';
            } else {
              body += '⚠️ PROJECT_STATE.md یافت نشد. یک کامیت بزنید تا CI اجرا شود.';
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue?.number || context.payload.pull_request?.number || 1,
              body
            });
