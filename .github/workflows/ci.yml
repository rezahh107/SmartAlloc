name: SmartAlloc CI
on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/**'
      - 'composer.*'
      - 'phpcs.xml'
      - 'psalm.xml*'
      - 'phpunit.xml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 0'

permissions:
  contents: read
  pull-requests: write
  issues: write
  security-events: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  qa:
    name: 🛡️ QA (PHP ${{ matrix.php }} / WP ${{ matrix.wp }})
    runs-on: ubuntu-latest
    timeout-minutes: 25
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: wordpress_test
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2']
        wp: ['6.3', '6.4', 'latest']
        include:
          - php: '8.2'
            wp: 'latest'
            coverage: true

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, xml, json, mysqli, curl, dom
          tools: composer, phpunit
          coverage: xdebug

      - name: Ensure system tools
        run: sudo apt-get update && sudo apt-get install -y unzip subversion

      - name: 🗄️ Composer cache
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: 📦 Install deps
        run: composer install --no-interaction --prefer-dist --ansi

      - name: Ensure PHPCS installed_paths
        run: |
          vendor/bin/phpcs --config-set installed_paths vendor/automattic/vipwpcs,vendor/wp-coding-standards/wpcs,vendor/phpcompatibility/php-compatibility

      - name: 🔧 PHPCS (WPCS + PHPCompatibilityWP)
        run: vendor/bin/phpcs -q --standard=phpcs.xml --report=full --report-summary

      - name: 🧪 Install WP test suite
        env: { WP_VERSION: ${{ matrix.wp }} }
        run: |
          chmod +x scripts/install-wp-tests.sh
          bash ./scripts/install-wp-tests.sh wordpress_test root '' 127.0.0.1:3306 $WP_VERSION

      - name: 🧪 PHPUnit
        env: { XDEBUG_MODE: coverage }
        run: |
          vendor/bin/phpunit $([ "${{ matrix.coverage }}" == "true" ] && echo "--coverage-clover coverage.xml" || true)

      - name: 🔍 Psalm (static analysis)
        run: |
          vendor/bin/psalm --no-progress --output-format=github --stats || true
          vendor/bin/psalm --taint-analysis || true

      - name: 🛡️ Composer audit
        run: composer audit --no-interaction || true

      - name: 📊 Summary
        if: always()
        run: |
          echo "## SmartAlloc QA Summary" >> $GITHUB_STEP_SUMMARY
          echo "- PHP: ${{ matrix.php }} / WP: ${{ matrix.wp }}" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage.xml ]; then
            PCT=$(grep -o 'lines percent="[0-9.]*"' coverage.xml | head -1 | sed 's/[^0-9.]*//g')
            echo "- Coverage: ${PCT}%" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📦 Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-${{ matrix.php }}-${{ matrix.wp }}
          path: |
            coverage.xml
            test-results.xml
            psalm*.xml
          retention-days: 14

  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    needs: qa
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
      - run: composer install --no-interaction --prefer-dist --ansi
      - run: |
          vendor/bin/psalm --taint-analysis --output-format=github || true
          composer audit --no-interaction || true
      - uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: psalm*.xml
          retention-days: 90
