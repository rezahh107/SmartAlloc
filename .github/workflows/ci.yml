name: SmartAlloc CI
on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/**'
      - 'composer.*'
      - 'phpcs.xml'
      - 'psalm.xml*'
      - 'phpunit.xml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
  workflow_dispatch:
    inputs:
      inject_ci_failure:
        description: "Inject dummy ci_failure for AUTO-FIX test"
        type: boolean
        default: false
  schedule:
    - cron: '0 6 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  qa:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.1','8.2']
    steps:
      - uses: actions/checkout@v4
      - name: 📦 Install jq & bc (early)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc
      - name: 🔧 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      - name: 🗃️ Composer cache (PHP-scoped)
        uses: actions/cache@v4
        with:
          path: ~/.cache/composer/files
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-
      - name: 🧱 Ensure ai_context.json exists (pre)
        if: always()
        run: |
          set -euo pipefail
          test -s ai_context.json || echo '{"decisions":[]}' > ai_context.json
          jq empty ai_context.json
      - name: 📥 Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress
      - name: 🎨 PHPCBF (soft)
        run: composer phpcbf || true
      - name: 📊 5D Score
        run: composer score:5d
      - name: 📝 Append 5D Summary & AUTO-FIX
        if: always()
        run: |
          chmod +x .github/scripts/emit_summary.sh .github/scripts/emit_autofix.sh
          if [ "${{ inputs.inject_ci_failure }}" = "true" ]; then
            echo '{"ci_failure":{"security_score":15,"phpcs_errors":2,"test_failures":1}}' > ai_context.json
          fi
          .github/scripts/emit_summary.sh && .github/scripts/emit_autofix.sh
      - name: 📤 Upload Enhanced Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: project-state-enhanced-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}
          if-no-files-found: warn
          path: |
            FEATURES.md
            ai_context.json
  full:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 📦 Install jq & bc (early)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc
      - name: 🔧 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
      - name: 🗃️ Composer cache (PHP-scoped)
        uses: actions/cache@v4
        with:
          path: ~/.cache/composer/files
          key: ${{ runner.os }}-php-8.2-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-8.2-composer-
      - name: 🧱 Ensure ai_context.json exists (pre)
        if: always()
        run: |
          set -euo pipefail
          test -s ai_context.json || echo '{"decisions":[]}' > ai_context.json
          jq empty ai_context.json
      - name: 📥 Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress
      - name: 🎨 PHPCBF (soft)
        run: composer phpcbf || true
      - name: 📊 5D Score
        run: composer score:5d
      - name: 📝 Append 5D Summary & AUTO-FIX
        if: always()
        run: |
          chmod +x .github/scripts/emit_summary.sh .github/scripts/emit_autofix.sh
          if [ "${{ inputs.inject_ci_failure }}" = "true" ]; then
            echo '{"ci_failure":{"security_score":15,"phpcs_errors":2,"test_failures":1}}' > ai_context.json
          fi
          .github/scripts/emit_summary.sh && .github/scripts/emit_autofix.sh
      - name: 📤 Upload Enhanced Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: project-state-enhanced-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}
          if-no-files-found: warn
          path: |
            FEATURES.md
            ai_context.json
