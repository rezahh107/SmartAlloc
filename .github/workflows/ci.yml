name: SmartAlloc CI
on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/**'
      - 'composer.*'
      - 'phpcs.xml'
      - 'psalm.xml*'
      - 'phpunit.xml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  qa:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.1','8.2']
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
      - name: 📦 Install jq & bc (early)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      - name: 🗃️ Composer cache (PHP-scoped)
        uses: actions/cache@v4
        with:
          path: ~/.cache/composer/files
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-
      - name: 🧱 Ensure ai_context.json exists (pre)
        if: always()
        run: |
          set -euo pipefail
          test -s ai_context.json || echo '{"decisions":[]}' > ai_context.json
          jq empty ai_context.json
      - name: 📥 Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress
      - name: 🎨 PHPCBF (soft)
        run: composer phpcbf || true
      - name: 📊 5D Score
        run: composer score:5d
      - name: 📝 Append 5D Summary
        if: always()
        run: |
          set -euo pipefail
          test -s ai_context.json || echo '{"decisions":[]}' > ai_context.json
          jq empty ai_context.json
          {
            echo '### Enhanced 5D Feature Scores'
            echo
            echo '**Timestamp (UTC):**' "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            echo
            echo '```json'
            jq -c '.current_scores // {}' ai_context.json || echo '{}'
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"
      - name: 🚨 AUTO-FIX Prompt (if ci_failure)
        if: always()
        run: |
          set -euo pipefail
          if jq -e '.ci_failure' ai_context.json >/dev/null 2>&1; then
            SEC=$(jq -r '.ci_failure.security_score // "?"' ai_context.json)
            PHPCS=$(jq -r '.ci_failure.phpcs_errors // "?"' ai_context.json)
            TESTS=$(jq -r '.ci_failure.test_failures // "?"' ai_context.json)
            {
              echo '```'
              echo '🚨 CI Failure Detected'
              echo "🔍 مشکل: امنیت پایین (${SEC}/25) + ${TESTS} تست شکست"
              echo '💡 پرامپت تولیدشده برای Codex:'
              echo
              echo '[AUTO-FIX REQUEST]'
              echo 'بر اساس خطاهای CI زیر، یک راه‌حل فوری ارائه بده:'
              echo
              echo "🔒 امنیت: ${SEC}/25"
              echo
              echo "⚠️ خطاهای PHPCS: ${PHPCS}"
              echo
              echo "🧪 تست‌های شکست‌خورده: ${TESTS}"
              echo
              echo '[RULES FOR CODEX]'
              echo 'فقط یک گزینه ارائه بده (نه ۴ گزینه)'
              echo 'حتماً بر روی رفع خطاهای بالا تمرکز کن'
              echo 'خروجی حتماً شامل این موارد باشد:'
              echo '• 📊 5D Score با امتیاز امنیت ≥ 20/25'
              echo '• ✅ تست‌های شکست‌خورده پاس شوند'
              echo '• 📦 Patchset با diff کمینه'
              echo '• 📌 دستور پوش آماده (git push origin fix/...)'
              echo '```'
            } >> "$GITHUB_STEP_SUMMARY"
          fi
      - name: 📤 Upload Enhanced Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: project-state-enhanced-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}
          if-no-files-found: warn
          path: |
            FEATURES.md
            ai_context.json
  full:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.1','8.2']
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
      - name: 📦 Install jq & bc (early)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      - name: 🗃️ Composer cache (PHP-scoped)
        uses: actions/cache@v4
        with:
          path: ~/.cache/composer/files
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-
      - name: 🧱 Ensure ai_context.json exists (pre)
        if: always()
        run: |
          set -euo pipefail
          test -s ai_context.json || echo '{"decisions":[]}' > ai_context.json
          jq empty ai_context.json
      - name: 📥 Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress
      - name: 🎨 PHPCBF (soft)
        run: composer phpcbf || true
      - name: 📊 5D Score
        run: composer score:5d
      - name: 📝 Append 5D Summary
        if: always()
        run: |
          set -euo pipefail
          test -s ai_context.json || echo '{"decisions":[]}' > ai_context.json
          jq empty ai_context.json
          {
            echo '### Enhanced 5D Feature Scores'
            echo
            echo '**Timestamp (UTC):**' "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            echo
            echo '```json'
            jq -c '.current_scores // {}' ai_context.json || echo '{}'
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"
      - name: 🚨 AUTO-FIX Prompt (if ci_failure)
        if: always()
        run: |
          set -euo pipefail
          if jq -e '.ci_failure' ai_context.json >/dev/null 2>&1; then
            SEC=$(jq -r '.ci_failure.security_score // "?"' ai_context.json)
            PHPCS=$(jq -r '.ci_failure.phpcs_errors // "?"' ai_context.json)
            TESTS=$(jq -r '.ci_failure.test_failures // "?"' ai_context.json)
            {
              echo '```'
              echo '🚨 CI Failure Detected'
              echo "🔍 مشکل: امنیت پایین (${SEC}/25) + ${TESTS} تست شکست"
              echo '💡 پرامپت تولیدشده برای Codex:'
              echo
              echo '[AUTO-FIX REQUEST]'
              echo 'بر اساس خطاهای CI زیر، یک راه‌حل فوری ارائه بده:'
              echo
              echo "🔒 امنیت: ${SEC}/25"
              echo
              echo "⚠️ خطاهای PHPCS: ${PHPCS}"
              echo
              echo "🧪 تست‌های شکست‌خورده: ${TESTS}"
              echo
              echo '[RULES FOR CODEX]'
              echo 'فقط یک گزینه ارائه بده (نه ۴ گزینه)'
              echo 'حتماً بر روی رفع خطاهای بالا تمرکز کن'
              echo 'خروجی حتماً شامل این موارد باشد:'
              echo '• 📊 5D Score با امتیاز امنیت ≥ 20/25'
              echo '• ✅ تست‌های شکست‌خورده پاس شوند'
              echo '• 📦 Patchset با diff کمینه'
              echo '• 📌 دستور پوش آماده (git push origin fix/...)'
              echo '```'
            } >> "$GITHUB_STEP_SUMMARY"
          fi
      - name: 📤 Upload Enhanced Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: project-state-enhanced-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}
          if-no-files-found: warn
          path: |
            FEATURES.md
            ai_context.json
